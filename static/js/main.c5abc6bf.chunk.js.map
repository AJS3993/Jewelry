{"version":3,"sources":["serviceWorker.js","components/Carousel.js","components/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","CarouselPage","activeItem","length","showControls","showIndicators","className","slide","itemId","src","alt","Home","React","Component","render","expand","size","tag","floating","social","fab","icon","right","to","Carousel","lg","md","wide","ecommerce","cascade","top","href","domElement","placement","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c5abc6bf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from \"react\";\nimport { MDBCarousel, MDBCarouselInner, MDBCarouselItem, MDBView, MDBContainer } from\n\"mdbreact\";\n\nconst CarouselPage = () => {\n  return (\n    <MDBContainer>\n      <MDBCarousel\n        activeItem={1}\n        length={3}\n        showControls={true}\n        showIndicators={false}\n        className=\"z-depth-4\"\n        slide\n      >\n        <MDBCarouselInner>\n          <MDBCarouselItem itemId=\"1\">\n            <MDBView>\n              <img\n                className=\"d-block w-100 rounded\"\n                src=\"https://i.imgur.com/NYVVHsX.jpg\"\n                alt=\"First slide\"\n              />\n            </MDBView>\n          </MDBCarouselItem>\n          <MDBCarouselItem itemId=\"2\">\n            <MDBView>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://i.imgur.com/Wj51LWB.jpg\"\n                alt=\"Second slide\"\n              />\n            </MDBView>\n          </MDBCarouselItem>\n          <MDBCarouselItem itemId=\"3\">\n            <MDBView>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://i.imgur.com/CtsopFj.png\"\n                alt=\"Third slide\"\n              />\n            </MDBView>\n          </MDBCarouselItem>\n        </MDBCarouselInner>\n      </MDBCarousel>\n    </MDBContainer>\n  );\n}\n\nexport default CarouselPage;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport CarouselPage from './Carousel'\n\nimport { MDBNavbar,MDBRow,MDBIcon,MDBBtn,MDBCol,MDBNavbarNav,MDBNavbarBrand, MDBNavItem, MDBNavLink, MDBCardBody,MDBCardTitle,MDBCard,MDBCardImage,MDBCardText,MDBCardFooter,MDBTooltip } from 'mdbreact';\n\n\n\nclass Home extends React.Component {\n \n\n  render() {\n    return (\n      <div>\n        \n      \n  \n      <MDBNavbar expand='md' className=' z-depth-2 tnav'>\n      <MDBNavbarBrand>\n      <MDBBtn size=\"sm\" tag=\"a\" floating social=\"fb\" className='ml-3 soLink'>\n        <MDBIcon fab icon=\"facebook-f\" />\n      </MDBBtn>\n\n      <MDBBtn size=\"sm\" tag=\"a\" floating social=\"ins\" className='soLink'>\n        <MDBIcon fab icon=\"instagram\" />\n      </MDBBtn>\n        </MDBNavbarBrand>\n\n        <MDBNavbarNav>\n        <MDBNavItem className=''>\n        <span className='tm1 m-1 td '>꧁</span>\n      \n        <span className='tm1 m-1 titleBanner rounded py-1 px-3'>Accesorios A La Mexicana</span>\n        <span className='tm1 m-1 td'>꧂</span>\n        </MDBNavItem>\n        </MDBNavbarNav>\n        \n        <MDBNavbarNav right className=''>\n      <MDBNavItem className=''>\n        <MDBNavLink className='white-text navLink'  to=\"/\">LogIn</MDBNavLink>\n      </MDBNavItem>\n      \n      <MDBNavItem>\n        <MDBNavLink className='white-text navLink' to=\"/fav\">SignUp</MDBNavLink>\n      </MDBNavItem>\n      {/* <MDBNavItem>\n        <MDBNavLink className='white-text mx-5 navLink' to=\"/add\"><MDBIcon icon=\"shopping-cart\" /></MDBNavLink>\n      </MDBNavItem> */}\n      </MDBNavbarNav>\n     \n      </MDBNavbar>\n\n   \n\n    \n  \n        \n\n        <div className='py-1 titleBanner3'>\n  \n        <MDBNavbar expand='md' className='mx-5 mt-3 nav2 py-3'>\n      \n        <MDBNavbarNav>\n      <MDBNavItem>\n        <MDBNavLink className='navLink px-4 m-0 titleBanner2 rounded' to=\"/\">Bracelets</MDBNavLink>\n      </MDBNavItem>\n      \n      <MDBNavItem>\n        <MDBNavLink className='navLink px-4 m-0 titleBanner2 rounded' to=\"/fav\">Rings</MDBNavLink>\n      </MDBNavItem>\n      <MDBNavItem>\n        <MDBNavLink className='px-5 m-0 titleBanner2 rounded navLink' to=\"/add\">Necklaces</MDBNavLink>\n      </MDBNavItem>\n\n      <MDBNavItem>\n        <MDBNavLink className='px-5 m-0 titleBanner2 rounded navLink' to=\"/add\">Earings</MDBNavLink>\n      </MDBNavItem>\n\n      <MDBNavItem>\n        <MDBNavLink className='px-5 m-0 titleBanner2 rounded navLink' to=\"/add\">More</MDBNavLink>\n      </MDBNavItem>\n      </MDBNavbarNav>\n     \n      </MDBNavbar>\n\n     \n\n    <div className='m-3 pt-3'>\n          \n      <CarouselPage/>\n\n      <br/>  \n      </div>\n      </div>\n\n      <div className='py-5 nav2 rgba-red-strong'>\n\n      <MDBRow className='mx-5'>\n        <MDBCol lg='4' md='12' className='mb-lg-0 mb-4'>\n          <MDBCard wide ecommerce>\n            <MDBCardImage\n              cascade\n              src='https://i.imgur.com/C3qz3GH.jpg'\n              top\n              alt='sample photo'\n            />\n            <MDBCardBody cascade className='text-center'>\n              <a href='#!' className='text-muted'>\n                <h5>Bracelets</h5>\n              </a>\n              <MDBCardTitle>\n                <strong>\n                  <a href='#!'>Hand Made</a>\n                </strong>\n              </MDBCardTitle>\n              <MDBCardText>Lorem ipsum dolor sit amet, consectetur adipisicing minima veniam elit.</MDBCardText>\n              <MDBCardFooter className='px-3'>\n                <span className='float-left font-weight-bold'>\n                  <strong>14$</strong>\n                </span>\n                <span className='float-right'>\n                  <MDBTooltip domElement placement='top'>\n                    <i className='grey-text fa fa-eye mr-3' />\n                    <span>Quick Look</span>\n                  </MDBTooltip>{' '}\n                  <MDBTooltip domElement placement='top'>\n                    <i className='grey-text fa fa-heart' />\n                    <span>Add to Whishlist</span>\n                  </MDBTooltip>\n                </span>\n              </MDBCardFooter>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        <MDBCol lg='4' md='12' className='mb-lg-0 mb-4'>\n          <MDBCard wide ecommerce>\n            <MDBCardImage\n              cascade\n              src='https://i.imgur.com/5ryOf0p.jpg?1'\n              top\n              alt='sample photo'\n            />\n            <MDBCardBody cascade className='text-center'>\n              <a href='#!' className='text-muted'>\n                <h5>Earrings</h5>\n              </a>\n              <MDBCardTitle>\n                <strong>\n                  <a href='#!'>Authentic</a>\n                </strong>\n              </MDBCardTitle>\n              <MDBCardText>Lorem ipsum dolor sit amet, consectetur adipisicing minima veniam elit.</MDBCardText>\n              <MDBCardFooter className='px-3'>\n                <span className='float-left font-weight-bold'>\n                  <strong>11$</strong>\n                </span>\n                <span className='float-right'>\n                  <MDBTooltip domElement placement='top'>\n                    <i className='grey-text fa fa-eye mr-3' />\n                    <span>Quick Look</span>\n                  </MDBTooltip>{' '}\n                  <MDBTooltip domElement placement='top'>\n                    <i className='grey-text fa fa-heart' />\n                    <span>Add to Whishlist</span>\n                  </MDBTooltip>\n                </span>\n              </MDBCardFooter>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        <MDBCol lg='4' md='12' className='mb-lg-0 mb-4'>\n          <MDBCard wide ecommerce>\n            <MDBCardImage\n              cascade\n              src='https://i.imgur.com/hODwDgX.jpg?1'\n              top\n              alt='sample photo'\n            />\n            <MDBCardBody cascade className='text-center'>\n              <a href='#!' className='text-muted'>\n                <h5>Necklace</h5>\n              </a>\n              <MDBCardTitle>\n                <strong>\n                  <a href='#!'>New!</a>\n                </strong>\n              </MDBCardTitle>\n              <MDBCardText>Lorem ipsum dolor sit amet, consectetur adipisicing minima veniam elit.</MDBCardText>\n              <MDBCardFooter className='px-3'>\n                <span className='float-left font-weight-bold'>\n                  <strong>21$</strong>\n                </span>\n                <span className='float-right'>\n                  <MDBTooltip domElement placement='top'>\n                    <i className='grey-text fa fa-eye mr-3' />\n                    <span>Quick Look</span>\n                  </MDBTooltip>{' '}\n                  <MDBTooltip domElement placement='top'>\n                    <i className='grey-text fa fa-heart' />\n                    <span>Add to Whishlist</span>\n                  </MDBTooltip>\n                </span>\n              </MDBCardFooter>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n      </div>\n      </div>\n    );\n  }\n}\nexport default Home;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Home from \"./components/Home\"\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Home/>\r\n    </Router>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  // If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}