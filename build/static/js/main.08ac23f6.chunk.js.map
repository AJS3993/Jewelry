{"version":3,"sources":["App.js","registerServiceWorker.js","index.js"],"names":["App","React","Component","render","id","className","fluid","lg","md","narrow","cascade","hover","alt","src","href","overlay","color","social","size","fab","icon","far","rounded","deck","target","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.08ac23f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MDBContainer,MDBRow,MDBCol,MDBCard,MDBView,MDBCardTitle,MDBCardBody,MDBCardGroup,MDBIcon,MDBMask,MDBBtn,MDBCardImage} from 'mdbreact';\r\nimport './App.css';\r\n  // import ScrollSpy from './scrollSpy';\r\n\r\nclass App extends React.Component {\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div id='profile-ex' className='my-4'>\r\n       \r\n        <MDBContainer fluid>\r\n          <MDBRow>\r\n            <MDBCol lg='4' md='12'>\r\n              <MDBCard  className='testimonial-card text-center m-4 mdb-color darken-3 z-depth-1' narrow>\r\n              <MDBView cascade hover>\r\n                <img\r\n                  alt='THE LEGEND'\r\n                  src='https://i.imgur.com/jWsMQyv.jpg?1'\r\n                  className='z-depth-2 mx-auto w-100'\r\n                />\r\n                <a href='#!'>\r\n                      <MDBMask overlay='white-slight' />\r\n                    </a>\r\n                  </MDBView>\r\n                <MDBCardBody>\r\n                  <MDBCardTitle className='white-text'>\r\n                    <strong>Andrew J Smith</strong>\r\n                  </MDBCardTitle>\r\n                  <h5 className='white-text'>\r\n                    Software Engineer\r\n                  </h5>\r\n                  <p className='white-text'>Austin, TX</p>\r\n                  <p className='card-text mt-3 white-text'>\r\n                    Former health professional who fell in to the world of software\r\n                  </p>\r\n                  <hr color='white'/>\r\n                  \r\n                  <a href='https://github.com/AJS3993'>\r\n                  <MDBBtn social=\"git\" size=\"sm\" className='px-2'>\r\n                    <MDBIcon fab icon=\"github\" className=\"pr-1\" /> Github\r\n                  </MDBBtn>\r\n                  </a>\r\n\r\n                <a href='https://www.linkedin.com/in/ajs3993/'>\r\n                  <MDBBtn social=\"li\" size=\"sm\" className='px-2'>\r\n                    <MDBIcon fab icon=\"linkedin-in\" className=\"pr-1\" /> Linkedin\r\n                  </MDBBtn>\r\n                </a>\r\n\r\n                 <a href='https://i.imgur.com/lx1QKqW.png'>\r\n                  <MDBBtn social=\"gplus\" size=\"sm\" className='px-2'> \r\n                  <MDBIcon far icon=\"file-alt\" /> Resume\r\n                  </MDBBtn>\r\n                  </a>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n              \r\n              {/* Skills Card */}\r\n              \r\n              <MDBCard className='m-4 mdb-color darken-3'>\r\n                <MDBCardBody className='text-center'>\r\n                  <h5 className='white-text'>\r\n                    <strong>Skills</strong>\r\n                  </h5>\r\n\r\n                  <hr color='white'/>\r\n\r\n                  <MDBBtn color='blue'size='sm' rounded className='px-3'>\r\n                    Bootstrap\r\n                  </MDBBtn>\r\n                  \r\n                  <MDBBtn color='light-green'size='sm' rounded className='px-3'>\r\n                    React\r\n                  </MDBBtn>\r\n                  \r\n                  <MDBBtn color='orange'size='sm' rounded className='px-3'>\r\n                    Javascript\r\n                  </MDBBtn>\r\n                 \r\n                  <MDBBtn color='yellow'size='sm' rounded className='px-3'>\r\n                    Python\r\n                  </MDBBtn>\r\n                  \r\n                  <MDBBtn color='red'size='sm' rounded className='px-3'>\r\n                    MongoDB\r\n                  </MDBBtn>\r\n                 \r\n                  <MDBBtn color='indigo'size='sm' rounded className='px-3'>\r\n                    SQL\r\n                  </MDBBtn>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n            </MDBCol>\r\n            \r\n            \r\n            \r\n            <MDBCol lg='8' md='12' className='text-center' >\r\n              <div className='text-center mt-3 mb-4'>\r\n                <h1 className='white-text'>\r\n                  \r\n                  <strong>PROJECTS</strong>\r\n                  <hr color='white'/>\r\n                </h1>\r\n              </div>\r\n          \r\n            {/* <ScrollSpy/> */}\r\n\r\n            <MDBCardGroup deck>\r\n                \r\n                {/* card 1 */}\r\n\r\n                <MDBCard className=' mb-5 mdb-color darken-3' cascade>\r\n                  <MDBView cascade hover>\r\n                    <MDBCardImage\r\n                      src='https://i.imgur.com/Ya5rZqw.png?2'\r\n                      className='card-img-top'\r\n                      alt='project one'\r\n                    />\r\n                    <a href='https://pizzatime465.herokuapp.com/' target=\"_blank\">\r\n                      <MDBMask overlay='white-slight' />\r\n                    </a>\r\n                  </MDBView>\r\n                  <MDBCardBody className='pb-2'>\r\n                    <h2 className='card-title white-text'>Pizza Time</h2>\r\n                    <hr color='white'/>\r\n                    <p className='card-text white-text'>\r\n                    Pizza Time is a tool for restaurant owners to create their menu and sell their food. Pizza Time is also for users to order food directly from the app. It was developed with Mongoose, Express and React.\r\n                    </p>\r\n                  \r\n                  <hr color='white'/>\r\n           \r\n<h5 className='d-flex justify-content-between'>\r\n\r\n                    <div>\r\n                      \r\n                       \r\n                        <MDBIcon fab icon='js yellow-text' className='mr-2' />\r\n                     \r\n                \r\n                        <MDBIcon fab icon='react cyan-text' />\r\n                      \r\n                    </div>\r\n                    <div>\r\n                    \r\n                      <a href='https://pizzatime465.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\r\n                     \r\n                        Live Preview <MDBIcon icon='image white-text' />\r\n                  \r\n                      </a>\r\n                    </div>\r\n\r\n\r\n                    </h5>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n\r\n                \r\n\r\n              {/* card 2 */}\r\n                \r\n                <MDBCard className='mb-5 mdb-color darken-3' cascade>\r\n                  <MDBView cascade hover>\r\n                    <img\r\n                      src='https://i.imgur.com/QwLb70q.png?4'\r\n                      className='img-fluid'\r\n                      alt='project one'\r\n                    />\r\n                    <a href='https://groupie3993.herokuapp.com/' target=\"_blank\">\r\n                      <MDBMask overlay='white-slight' />\r\n                    </a>\r\n                  </MDBView>\r\n                  <MDBCardBody className='pb-2'>\r\n                    <h2 className='card-title white-text'>Groupie</h2>\r\n                    <hr color='white'/>\r\n                    <p className='card-text white-text'>\r\n                    keeping tabs on your favorite local artists just got a lot easier. Simply create an account and search events or artists in your area. Add your favorite artists and keep track of their upcoming events.\r\n                    </p>\r\n                    <hr color='white'/>\r\n                    <h5 className='d-flex justify-content-between'>\r\n\r\n<div>\r\n  \r\n   \r\n    <MDBIcon fab  icon='python yellow-text md' />\r\n \r\n\r\n  \r\n</div>\r\n<div>\r\n\r\n  <a href='https://groupie3993.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\r\n  \r\n    Live Preview <MDBIcon icon='image white-text' />\r\n\r\n  </a>\r\n</div>\r\n\r\n\r\n</h5>\r\n</MDBCardBody>\r\n                </MDBCard>\r\n              \r\n              </MDBCardGroup>\r\n     \r\n          <MDBCardGroup deck>\r\n\r\n              {/* card 3 */}\r\n\r\n                <MDBCard className='mb-5 mdb-color darken-3' cascade>\r\n                  <MDBView cascade hover>\r\n                    <img\r\n                      src='https://i.imgur.com/YiT80Ww.png?1'\r\n                      className='img-fluid'\r\n                      alt='project one'\r\n                    />\r\n                    <a href='https://mongoose-flights3890654.herokuapp.com/' target=\"_blank\">\r\n                      <MDBMask overlay='white-slight' />\r\n                    </a>\r\n                  </MDBView>\r\n                  <MDBCardBody className='pb-2'>\r\n                    <h2 className='card-title white-text'>Mongoose Flights</h2>\r\n                    <hr color='white'/>\r\n                    <p className='card-text white-text'>\r\n                      A flight tracking app that uses MongoDB to hold data. I built it to practice so it has a bit more functionality than a real app would have.</p>\r\n                    <hr color='white'/>\r\n                    \r\n                    <h5 className='d-flex justify-content-between'>\r\n\r\n                    <div>\r\n                      \r\n                       \r\n                        <MDBIcon fab icon='js yellow-text' className='mr-2' />\r\n                     \r\n                      \r\n                    </div>\r\n                    <div>\r\n                    \r\n                      <a href='https://mongoose-flights3890654.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\r\n                     \r\n                        Live Preview <MDBIcon icon='image white-text' />\r\n                  \r\n                      </a>\r\n                    </div>\r\n\r\n\r\n                    </h5>\r\n                  </MDBCardBody>\r\n                </MDBCard>\r\n\r\n                {/* card 4 */}\r\n\r\n                <MDBCard className='mb-5 mdb-color darken-3' cascade>\r\n                  <MDBView cascade hover>\r\n                    <img\r\n                      src='https://i.imgur.com/r414M0G.png?2'\r\n                      className='img-fluid'\r\n                      alt='project one'\r\n                    />\r\n                    <a href='https://my-book-shelf789.herokuapp.com/' target=\"_blank\">\r\n                      <MDBMask overlay='white-slight' />\r\n                    </a>\r\n                  </MDBView>\r\n                  <MDBCardBody className='pb-2'>\r\n                    <h2 className='card-title white-text'>My Book Shelf</h2>\r\n                    <hr color='white'/>\r\n                    <p className='card-text white-text'>\r\n                    MyBookShelf is your own personal library tracker. Sort your books to help you remember which books you have read and which books you havent. </p>\r\n                    <hr color='white'/>\r\n                    \r\n                    <h5 className='d-flex justify-content-between'>\r\n\r\n<div>\r\n  \r\n   \r\n    <MDBIcon fab icon='js yellow-text' className='mr-2' />\r\n \r\n  \r\n</div>\r\n<div>\r\n\r\n  <a href='https://my-book-shelf789.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\r\n \r\n    Live Preview <MDBIcon icon='image white-text' />\r\n\r\n  </a>\r\n</div>\r\n\r\n\r\n</h5>\r\n</MDBCardBody>\r\n</MDBCard>\r\n\r\n\r\n\r\n              </MDBCardGroup>\r\n         \r\n             \r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App/> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}