{"version":3,"sources":["serviceWorker.js","Landing/Landing.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Landing","React","Component","constructor","props","super","toggleCollapse","collapseID","this","setState","prevState","state","render","id","dark","expand","fixed","className","scrolling","transparent","onClick","isOpen","navbar","left","right","href","overlay","md","params","fluid","lg","narrow","cascade","hover","alt","src","color","social","size","fab","icon","far","rounded","deck","target","App","exact","path","routerProps","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7602090.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport {\n  MDBContainer,\n  MDBNavbar,\n  MDBCardTitle,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardGroup,\n  MDBMask,\n  MDBIcon,\n  MDBView,\n  MDBBtn,\n  MDBCardBody,\n  MDBCardImage,\n  MDBScrollspyListItem\n} from 'mdbreact';\nimport './Landing.css';\nimport Particles from 'react-particles-js';\n\n\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapseID: ''\n    };\n  }\n\n  toggleCollapse = collapseID => () =>\n    this.setState(prevState => ({\n      collapseID: prevState.collapseID !== collapseID ? collapseID : ''\n    }));\n\n  render() {\n    return (\n      <div id='landing'>\n        <MDBNavbar dark expand='md' fixed='top' className='z-depth-0' scrolling transparent>\n       \n            <MDBNavbarToggler onClick={this.toggleCollapse('navbarCollapse')} />\n            <MDBCollapse\n              id='navbarCollapse'\n              isOpen={this.state.collapseID}\n              navbar\n            >\n            \n          <MDBNavbarNav left>\n          <h2>Andrew <span id='logo' className='font-weight-bold'>J</span> Smith </h2>\n                  </MDBNavbarNav>\n                <MDBNavbarNav right>\n                <MDBNavItem>\n                <MDBScrollspyListItem href=\"#cardBack\">\n          Portfolio\n        </MDBScrollspyListItem>\n                </MDBNavItem>\n                \n              </MDBNavbarNav>\n              \n            </MDBCollapse>\n       \n        </MDBNavbar>\n\n        <section id='home'>\n          <MDBView>\n\n         \n\n\n            <MDBMask\n              className='d-flex justify-content-center align-items-center'\n              overlay='gradient'\n            >\n              <MDBContainer className='h-100 justify-content-center align-items-center'>\n                <MDBRow className='flex-center pt-5 mt-3'>\n                  <MDBCol md='6' className='text-center text-md-right mb-5'>\n                    <div className='white-text'>\n                    <h2>Andrew <span className='yellow-text font-weight-bold'>J</span> Smith </h2>\n                   \n                      <h6 className='yellow-text'>Web Development</h6>\n                      <br />\n                      \n                    </div>\n                  </MDBCol>\n\n                  \n                </MDBRow>\n                \n              </MDBContainer>\n              \n            </MDBMask>\n           \n  <Particles\n    params={{\n      \"style\": {\n        \"height\":\"100%\"\n },\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 160,\n\t            \"density\": {\n\t                \"enable\": false\n\t            }\n\t        },\n\t        \"size\": {\n\t            \"value\": 2,\n\t            \"random\": true,\n\t            \"anim\": {\n\t                \"speed\": 4,\n\t                \"size_min\": 0.3\n\t            }\n\t        },\n\t        \"line_linked\": {\n\t            \"enable\": false\n\t        },\n\t        \"move\": {\n\t            \"random\": true,\n\t            \"speed\": 1,\n\t            \"out_mode\": \"out\"\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": true,\n\t                \"mode\": \"bubble\"\n\t            },\n\t            \"onclick\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        },\n\t        \"modes\": {\n\t            \"bubble\": {\n\t                \"distance\": 250,\n\t                \"duration\": 2,\n\t                \"size\": 0,\n\t                \"opacity\": 0\n\t            },\n\t            \"repulse\": {\n\t                \"distance\": 400,\n\t                \"duration\": 4\n\t            }\n\t        }\n\t    }\n\t}} />\n \n           \n          </MDBView>\n          \n        </section>\n\n\n\n        <section id='cardBack' className='py-5'>\n        <div id='profile-ex' className='my-3'>\n       \n        <MDBContainer fluid>\n          <MDBRow>\n            <MDBCol lg='4' md='12'>\n              <MDBCard  className='testimonial-card text-center m-4 mdb-color darken-3 z-depth-1' narrow>\n              <MDBView cascade hover>\n                <img\n                  alt='THE LEGEND'\n                  src='https://i.imgur.com/jWsMQyv.jpg?1'\n                  className='z-depth-2 mx-auto w-100'\n                />\n                <a href='#!'>\n                      <MDBMask overlay='white-slight' />\n                    </a>\n                  </MDBView>\n                <MDBCardBody>\n                  <MDBCardTitle className='white-text'>\n                    <strong>Andrew J Smith</strong>\n                  </MDBCardTitle>\n                  <h5 className='white-text'>\n                    Software Engineer\n                  </h5>\n                  <p className='white-text'>Austin, TX</p>\n                  <p className='card-text mt-3 white-text'>\n                    Former health professional who fell in to the world of software\n                  </p>\n                  <hr color='white'/>\n                  \n                  <a href='https://github.com/AJS3993'>\n                  <MDBBtn social=\"git\" size=\"sm\" className='px-2'>\n                    <MDBIcon fab icon=\"github\" className=\"pr-1\" /> Github\n                  </MDBBtn>\n                  </a>\n\n                <a href='https://www.linkedin.com/in/ajs3993/'>\n                  <MDBBtn social=\"li\" size=\"sm\" className='px-2'>\n                    <MDBIcon fab icon=\"linkedin-in\" className=\"pr-1\" /> Linkedin\n                  </MDBBtn>\n                </a>\n\n                 <a href='https://i.imgur.com/Lv2Tfie.png'>\n                  <MDBBtn social=\"gplus\" size=\"sm\" className='px-2'> \n                  <MDBIcon far icon=\"file-alt\" /> Resume\n                  </MDBBtn>\n                  </a>\n                </MDBCardBody>\n              </MDBCard>\n              \n              {/* Skills Card */}\n              \n              <MDBCard className='m-4 mdb-color darken-3'>\n                <MDBCardBody className='text-center'>\n                  <h5 className='white-text'>\n                    <strong>Skills</strong>\n                  </h5>\n\n                  <hr color='white'/>\n\n                  <MDBBtn color='blue'size='sm' rounded className='px-3'>\n                    Bootstrap\n                  </MDBBtn>\n                  \n                  <MDBBtn color='light-green'size='sm' rounded className='px-3'>\n                    React\n                  </MDBBtn>\n                  \n                  <MDBBtn color='orange'size='sm' rounded className='px-3'>\n                    Javascript\n                  </MDBBtn>\n                 \n                  <MDBBtn color='yellow'size='sm' rounded className='px-3'>\n                    Python\n                  </MDBBtn>\n                  \n                  <MDBBtn color='red'size='sm' rounded className='px-3'>\n                    MongoDB\n                  </MDBBtn>\n                 \n                  <MDBBtn color='indigo'size='sm' rounded className='px-3'>\n                    SQL\n                  </MDBBtn>\n                </MDBCardBody>\n              </MDBCard>\n\n              <MDBCard className='m-4 mdb-color darken-3'>\n                <MDBCardBody className='text-center'>\n                  <h5 className='white-text'>\n                    <strong>About Me</strong>\n                  </h5>\n\n                  <hr color='white'/>\n\n                <p className='white-text'>\n                I am a software engineer with a background in science and healthcare. I have built many projects both front and back end. I currently have the most experience in javascript, react and python but I also have some experience with many other technologies and I am always learning more. \n                </p>\n                  \n                \n                </MDBCardBody>\n              </MDBCard>\n              \n\n            </MDBCol>\n            \n            \n            \n            <MDBCol lg='8' md='12' className='text-center' >\n              <div className='text-center mb-4'>\n                <h1 className='white-text'>\n                  \n                  Projects\n                 \n                </h1>\n              </div>\n          \n            {/* <ScrollSpy/> */}\n\n            <MDBCardGroup deck>\n                \n                {/* card 1 */}\n\n                <MDBCard className=' mb-5 m-4 mdb-color darken-3' narrow cascade>\n                  <MDBView cascade hover>\n                    <MDBCardImage\n                      src='https://i.imgur.com/Ya5rZqw.png?2'\n                      className='card-img-top'\n                      alt='project one'\n                    />\n                    <a href='https://pizzatime465.herokuapp.com/' target=\"_blank\">\n                      <MDBMask overlay='white-slight' />\n                    </a>\n                  </MDBView>\n                  <MDBCardBody className='pb-2'>\n                    <h2 className='card-title white-text'>Pizza Time</h2>\n                    <hr color='white'/>\n                    <p className='card-text white-text'>\n                    Pizza Time is a tool for restaurant owners to create their menu and sell their food. Pizza Time is also for users to order food directly from the app. It was developed with Mongoose, Express and React.\n                    </p>\n                  \n                  <hr color='white'/>\n           \n<h5 className='d-flex justify-content-between'>\n\n                    <div>\n                      \n                       \n                        <MDBIcon fab icon='js yellow-text' className='mr-2' />\n                     \n                \n                        <MDBIcon fab icon='react cyan-text' />\n                      \n                    </div>\n                    <div>\n                    \n                      <a href='https://pizzatime465.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\n                     \n                        Live Preview <MDBIcon icon='image white-text' />\n                  \n                      </a>\n                    </div>\n\n\n                    </h5>\n                  </MDBCardBody>\n                </MDBCard>\n\n                \n\n              {/* card 2 */}\n                \n                <MDBCard className='mb-5 m-4 mdb-color darken-3' narrow cascade>\n                  <MDBView cascade hover>\n                    <img\n                      src='https://i.imgur.com/QwLb70q.png?4'\n                      className='img-fluid'\n                      alt='project one'\n                    />\n                    <a href='https://groupie3993.herokuapp.com/' target=\"_blank\">\n                      <MDBMask overlay='white-slight' />\n                    </a>\n                  </MDBView>\n                  <MDBCardBody className='pb-2'>\n                    <h2 className='card-title white-text'>Groupie</h2>\n                    <hr color='white'/>\n                    <p className='card-text white-text'>\n                    keeping tabs on your favorite local artists just got a lot easier. Simply create an account and search events or artists in your area. Add your favorite artists and keep track of their upcoming events.\n                    </p>\n                    <hr color='white'/>\n                    <h5 className='d-flex justify-content-between'>\n\n<div>\n  \n   \n    <MDBIcon fab  icon='python yellow-text md' />\n \n\n  \n</div>\n<div>\n\n  <a href='https://groupie3993.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\n  \n    Live Preview <MDBIcon icon='image white-text' />\n\n  </a>\n</div>\n\n\n</h5>\n</MDBCardBody>\n                </MDBCard>\n              \n              </MDBCardGroup>\n     \n          <MDBCardGroup deck>\n\n              {/* card 3 */}\n\n                <MDBCard className='mb-5 m-4 mdb-color darken-3' narrow cascade>\n                  <MDBView cascade hover>\n                    <img\n                      src='https://i.imgur.com/YiT80Ww.png?1'\n                      className='img-fluid'\n                      alt='project one'\n                    />\n                    <a href='https://mongoose-flights3890654.herokuapp.com/' target=\"_blank\">\n                      <MDBMask overlay='white-slight' />\n                    </a>\n                  </MDBView>\n                  <MDBCardBody className='pb-2'>\n                    <h2 className='card-title white-text'>Mongoose Flights</h2>\n                    <hr color='white'/>\n                    <p className='card-text white-text'>\n                      A flight tracking app that uses MongoDB to hold data. I built it to practice so it has a bit more functionality than a real app would have.</p>\n                    <hr color='white'/>\n                    \n                    <h5 className='d-flex justify-content-between'>\n\n                    <div>\n                      \n                       \n                        <MDBIcon fab icon='js yellow-text' className='mr-2' />\n                     \n                      \n                    </div>\n                    <div>\n                    \n                      <a href='https://mongoose-flights3890654.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\n                     \n                        Live Preview <MDBIcon icon='image white-text' />\n                  \n                      </a>\n                    </div>\n\n\n                    </h5>\n                  </MDBCardBody>\n                </MDBCard>\n\n                {/* card 4 */}\n\n                <MDBCard className='mb-5 m-4 mdb-color darken-3' narrow cascade>\n                  <MDBView cascade hover>\n                    <img\n                      src='https://i.imgur.com/r414M0G.png?2'\n                      className='img-fluid'\n                      alt='project one'\n                    />\n                    <a href='https://my-book-shelf789.herokuapp.com/' target=\"_blank\">\n                      <MDBMask overlay='white-slight' />\n                    </a>\n                  </MDBView>\n                  <MDBCardBody className='pb-2'>\n                    <h2 className='card-title white-text'>My Book Shelf</h2>\n                    <hr color='white'/>\n                    <p className='card-text white-text'>\n                    MyBookShelf is your own personal library tracker. Sort your books to help you remember which books you have read and which books you havent. </p>\n                    <hr color='white'/>\n                    \n                    <h5 className='d-flex justify-content-between'>\n\n<div>\n  \n   \n    <MDBIcon fab icon='js yellow-text' className='mr-2' />\n \n  \n</div>\n<div>\n\n  <a href='https://my-book-shelf789.herokuapp.com/' className='waves-effect white-text' target=\"_blank\">\n \n    Live Preview <MDBIcon icon='image white-text' />\n\n  </a>\n</div>\n\n\n</h5>\n</MDBCardBody>\n</MDBCard>\n\n\n\n              </MDBCardGroup>\n\n          \n     \n          <MDBCardGroup deck>\n\n              {/* card 5 */}\n\n                <MDBCard className='mb-5 m-4 mdb-color darken-3' narrow cascade>\n                  <MDBView cascade hover>\n                    <img\n                      src='https://i.imgur.com/akoHktO.png?1'\n                      className='img-fluid'\n                      alt='project one'\n                    />\n                    <a href='https://ajs3993.github.io/WordGame/' target=\"_blank\">\n                      <MDBMask overlay='white-slight' />\n                    </a>\n                  </MDBView>\n                  <MDBCardBody className='pb-2'>\n                    <h2 className='card-title white-text'>HangMan</h2>\n                    <hr color='white'/>\n                    <p className='card-text white-text'>\n                      Javascript Hangman. Still a work in progress</p>\n                    <hr color='white'/>\n                    \n                    <h5 className='d-flex justify-content-between'>\n\n                    <div>\n                      \n                       \n                        <MDBIcon fab icon='js yellow-text' className='mr-2' />\n                     \n                      \n                    </div>\n                    <div>\n                    \n                      <a href='https://ajs3993.github.io/WordGame/' className='waves-effect white-text' target=\"_blank\">\n                     \n                        Live Preview <MDBIcon icon='image white-text' />\n                  \n                      </a>\n                    </div>\n\n\n                    </h5>\n                  </MDBCardBody>\n                </MDBCard>\n\n                {/* card 6 */}\n\n                <MDBCard className='mb-5 m-4 mdb-color darken-3' narrow cascade>\n                  <MDBView cascade hover>\n                    <img\n                      src='https://i.imgur.com/7pmldI3.png?1'\n                      className='img-fluid'\n                      alt='project one'\n                    />\n                    <a href='https://ajs3993.github.io/React-Rolodex/' target=\"_blank\">\n                      <MDBMask overlay='white-slight' />\n                    </a>\n                  </MDBView>\n                  <MDBCardBody className='pb-2'>\n                    <h2 className='card-title white-text'>React Rolodex</h2>\n                    <hr color='white'/>\n                    <p className='card-text white-text'>\n                      A rolodex made with react components. A searchbar allows you to sort through employee id cards.\n                     </p>\n                    <hr color='white'/>\n                    \n                    <h5 className='d-flex justify-content-between'>\n\n<div>\n  \n<MDBIcon fab icon='js yellow-text' className='mr-2' />\n                     \n                \n<MDBIcon fab icon='react cyan-text' />\n \n  \n</div>\n<div>\n\n  <a href='https://ajs3993.github.io/React-Rolodex/' className='waves-effect white-text' target=\"_blank\">\n \n    Live Preview <MDBIcon icon='image white-text' />\n\n  </a>\n</div>\n\n\n</h5>\n</MDBCardBody>\n</MDBCard>\n\n\n\n              </MDBCardGroup>\n         \n             \n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n          </section>\n          \n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Landing from './Landing/Landing';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n\n\n<Switch>\n<Route \n      exact path={`/`} \n      render={ (routerProps\n      ) => < Landing/>} />\n\n          \n         \n\n              \n              </Switch>\n              \n                 \n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport './index.css';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport App from \"./App\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </Router>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  // If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}